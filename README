Constantin Radu-Giorgian 321CC

Tema 4 PCOM:

Tema a fost implementata pe baza laboratorului 9 si am folosit libraria parson pentru a parsa mesajele de tip json.

Timp de lucru: ~10 ore

Fisierele buffer.c, buffer.h, parson.c, parson.h sunt nemodificate, luate din laborator respectiv de pe github.

In requests.c, requests.h am modificat parametrii functiei pentru a fi optimizate pentru folosirea lor  si am mai creat compute_delete_request pt a putea sterge cartile. In rest, functiile sunt create similar ca in laboratorul 9.

In fisierul helpers.c implicit helpers.h am creat 2 functii noi pentru a putea extrage cookieul si tokenul din raspunsul serverului.

In fisierul client.c am realizat conectarea catre server si crearea comenzilor cerute in enuntul temei.
Astfel:

Am inclus bibliotecile necesare pentru a utiliza functii si structuri specifice, cum ar fi lucrul cu socket-uri, manipularea string-urilor si lucrul cu JSON.

In functia main, initializez variabilele si pornesc un while infinit pentru a primi comenzi de la utilizator:

In bucla while, verific fiecare comanda primita si execut actiunile corespunzatoare.

-> Daca comanda este "exit", deschid o conexiune catre server, inchid conexiunea si ies din bucla.

-> Daca comanda este "register", primesc un username si o parola de la utilizator, construiesc un obiect JSON cu aceste informatii si trimit un request POST catre server pentru a crea un cont nou.

-> Daca comanda este "login", primesc un username si o parola de la utilizator, construiesc un obiect JSON cu aceste informatii si trimit un request POST catre server pentru a autentifica utilizatorul.

-> Daca comanda este "enter_library", verific daca utilizatorul este autentificat si trimit un request GET catre server pentru a obtine un token de acces la biblioteca.

-> Daca comanda este "get_books", verific daca utilizatorul are un token valid si trimit un request GET catre server pentru a obtine lista de carti din biblioteca.

-> Daca comanda este "get_book", verific daca utilizatorul are un token valid, primesc un ID de la utilizator si trimit un request GET catre server pentru a obtine detaliile despre cartea cu ID-ul respectiv.

-> Daca comanda este "add_book", verific daca utilizatorul are un token valid, primesc de la utilizator detaliile despre o carte si trimit un request POST catre server pentru a adauga cartea in biblioteca.

-> Daca comanda este "delete_book", verific daca utilizatorul are un token valid, primesc un ID de la utilizator si trimit un request DELETE catre server pentru a sterge cartea cu ID-ul respectiv din biblioteca.

-> Dacă comanda este "logout", verific dacă utilizatorul este autentificat și trimit un request POST către server pentru a deconecta utilizatorul.

Dupa fiecare comanda, inchid conexiunea si afisez rezultatele sau mesajele de eroare corespunzatoare.